const fs = require('fs');
const path = require('path');

function makeDirIfNotExists(dirPath) {
    if (!fs.existsSync(dirPath)) fs.mkdirSync(dirPath);
}

function copyFile(filePath, outputPath) {
    const fileContent = fs.readFileSync(filePath, { encoding: 'utf8' });
    const outputFileContent = `// AUTOGENERATED FILE DO NOT EDIT\n// SOURCE FILE: ${filePath}\n\n${fileContent}`;
    fs.writeFileSync(outputPath, outputFileContent);
}

function clearDirectory(dirPath, rmSelf = false) {
    const dirContents = fs.readdirSync(dirPath);
    dirContents.forEach(item => {
        const itemPath = path.join(dirPath, item);
        const stats = fs.statSync(itemPath);
        if (stats.isFile()) {
            fs.unlinkSync(itemPath);
        } else {
            clearDirectory(itemPath, true);
        }
    });
    if (rmSelf === true) fs.rmdirSync(dirPath);
}

makeDirIfNotExists('./api');
clearDirectory('./api');
makeDirIfNotExists('./api/t');

copyFile('./pkg/t.go', './api/t.go');
copyFile('./pkg/t/t.go', './api/t/[id].go');
