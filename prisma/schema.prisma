// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

generator goClient {
  provider = "go run github.com/steebchen/prisma-client-go"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

model User {
  id             Int      @id @default(autoincrement())
  name           String   @unique
  hashedPassword String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model Click {
  id                 Int       @id @default(autoincrement())
  publicId           String    @unique
  externalId         String
  cost               Float
  revenue            Float
  viewTime           DateTime
  clickTime          DateTime?
  convTime           DateTime?
  viewOutputUrl      String
  clickOutputUrl     String?
  tokens             String
  ip                 String
  isp                String?
  userAgent          String
  language           String
  country            String?
  region             String?
  city               String?
  deviceType         String
  device             String
  screenResolution   String
  os                 String
  osVersion          String
  browserName        String
  browserVersion     String
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  affiliateNetworkId Int?
  campaignId         Int
  savedFlowId        Int?
  landingPageId      Int?
  offerId            Int?
  trafficSourceId    Int
}

model AffiliateNetwork {
  id                    Int      @id @default(autoincrement())
  name                  String
  defaultNewOfferString String
  tags                  String[]
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt
  Offer                 Offer[]
}

model Campaign {
  id                      Int           @id @default(autoincrement())
  publicId                String        @unique
  name                    String
  landingPageRotationType RotationType
  offerRotationType       RotationType
  geoName                 GeoName
  tags                    String[]
  createdAt               DateTime      @default(now())
  updatedAt               DateTime      @updatedAt
  trafficSource           TrafficSource @relation(fields: [trafficSourceId], references: [id])
  trafficSourceId         Int

  // flowType determines what flow properties the campaign uses
  flowType FlowType

  // for BUILT_IN flowType:
  flowMainRoute  String?
  flowRuleRoutes String? @default("[]")

  // for URL flowType:
  flowUrl String?

  // for SAVED flowType:
  savedFlow   SavedFlow? @relation(fields: [savedFlowId], references: [id])
  savedFlowId Int?
}

enum FlowType {
  SAVED
  BUILT_IN
  URL
}

model SavedFlow {
  id         Int        @id @default(autoincrement())
  name       String
  mainRoute  String
  ruleRoutes String     @default("[]")
  tags       String[]
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  Campaign   Campaign[]
}

model LandingPage {
  id        Int      @id @default(autoincrement())
  name      String
  url       String
  tags      String[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum RotationType {
  RANDOM
  // TODO: Expand rotation types to include: "fixed", "smart", etc.
}

model Offer {
  id                 Int              @id @default(autoincrement())
  name               String
  url                String
  tags               String[]
  createdAt          DateTime         @default(now())
  updatedAt          DateTime         @updatedAt
  affiliateNetwork   AffiliateNetwork @relation(fields: [affiliateNetworkId], references: [id])
  affiliateNetworkId Int
}

model TrafficSource {
  id              Int        @id @default(autoincrement())
  name            String
  postbackUrl     String?
  externalIdToken String
  costToken       String
  customTokens    String
  tags            String[]
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
  Campaign        Campaign[]
}

enum GeoName {
  NONE
  AFGHANISTAN
  ALGERIA
  ARGENTINA
  AUSTRALIA
  BANGLADESH
  BRAZIL
  BURMA
  CAMEROON
  CANADA
  CHILE
  CHINA
  COLOMBIA
  COTE_DIVOIRE
  DEMOCRATIC_REPUBLIC_OF_THE_CONGO
  EGYPT
  ETHIOPIA
  FRANCE
  GERMANY
  GHANA
  INDIA
  INDONESIA
  IRAN
  IRAQ
  ITALY
  JAPAN
  KENYA
  MADAGASCAR
  MALAYSIA
  MEXICO
  MOROCCO
  MOZAMBIQUE
  NEPAL
  NIGER
  NIGERIA
  PAKISTAN
  PERU
  PHILIPPINES
  POLAND
  RUSSIA
  SAUDI_ARABIA
  SOUTH_AFRICA
  SOUTH_KOREA
  SPAIN
  SRI_LANKA
  SUDAN
  TANZANIA
  THAILAND
  TURKEY
  UGANDA
  UNITED_KINGDOM
  UNITED_STATES
  VIETNAM
}
